#!/bin/bash

. ./imgtool.lib

usage() {
	echo "Bad" >&2
}

validate_path() {
	local CHECKPATH=${1}

	[ -d ${CHECKPATH} ] || { echo "The path ${CHECKPATH} does not exist"; exit 1; }

}

#-- Main code

check_root RESULT
if [ $RESULT != 1 ]; then
	echo "Script must be run as root"
	exit 1
fi

while getopts ':hB:R:b:r:s:t:' flag ; do
case $flag in
	h)
		usage
		exit 0
;;
B)
	validate_path ${OPTARG}
	FROMBOOT=${OPTARG}
;;
R)
validate_path ${OPTARG}
FROMROOT=${OPTARG}
;;
b)
validate_path ${OPTARG}
TOBOOT=${OPTARG}
;;
r)
validate_path ${OPTARG}
		TOROOT=${OPTARG}
;;
s)
;;
t)
;;
	(?)
		echo "Invalid option" >&2
	usage
			exit 1
;;
	:)
echo "Option -${OPTARG} requires an argument." >&2
		usage
exit 1
;;
esac
done



#-- Main program

#echo "Source boot mount-point: ${FROMBOOT}"
#echo "Source root mount-point: ${FROMROOT}"
#echo "Target boot mount-point: ${TOBOOT}"
#echo "Target root mount-point: ${TOROOT}"

#rsync -av ${SOURCE_BOOTMP}/* ${TARGET_BOOTMP}
#rsync -av --exclude=lost+found ${SOURCE_ROOTMP}/* ${TARGET_ROOTMP}

