#!/bin/bash

set -e

if [ `whoami` != 'root' ]; then
	echo "Must be run as root"
	exit 1
fi

chrootdir=0

while getopts ":d" opt
do
	case $opt in
		d)
			chrootdir=1
		;;
		\?)
			echo "Usage: ./foo.sh [-d] <directory>"
			exit 1
		;;
	esac
done

shift $(($OPTIND -1 ))

CHROOT="${1}"

[ -d "${CHROOT}" ] || mkdir -p "${CHROOT}"


if [ ${chrootdir} = '1' ]; then
	pacstrap -d "${CHROOT}" base linux-raspberrypi linux-raspberrypi-headers raspberrypi-firmware openssh sudo
else
	pacstrap "${CHROOT}" base linux-raspberrypi linux-raspberrypi-headers raspberrypi-firmware openssh sudo
fi


cp /boot/*.bin "${CHROOT}"/boot
cp /boot/*.dat "${CHROOT}"/boot
cp /boot/*.elf "${CHROOT}"/boot


chroot "${CHROOT}"/ mknod -m 600 /dev/console c 5 1
chroot "${CHROOT}"/ mknod -m 666 /dev/null c 1 3
chroot "${CHROOT}"/ mknod -m 666 /dev/zero c 1 5

chroot "${CHROOT}" /bin/bash -c 'echo "alarmpi" > /etc/hostname'

chroot "${CHROOT}" /bin/bash -c 'echo -e "\n\n/dev/mmcblk0p1  /boot   vfat    defaults        0       0\n\n" >> /etc/fstab'

chroot "${CHROOT}" /bin/bash -c 'echo "SSHD: ALL" >> /etc/hosts.allow'


# set root password
echo -e "root\nroot\n" | chroot "${CHROOT}" /usr/bin/passwd root


# add a user and set the password
chroot "${CHROOT}" useradd -m -g users -G wheel,storage,power -s /bin/bash alarm
echo -e "alarm\nalarm\n" | chroot "${CHROOT}" /usr/bin/passwd alarm


chroot "${CHROOT}" systemctl enable dhcpcd.service
chroot "${CHROOT}" systemctl enable sshd.service

echo "All done"

