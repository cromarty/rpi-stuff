

check_root() {
	local  __resultvar=${1}
	if [ `whoami` != 'root' ]; then
		local myresult=0
	else
		local myresult=1
	fi
	eval $__resultvar="'$myresult'"
}


validate_hostname() {
# does not check length does not exceed 253, and does not allow hostname to start with a digit
	local hostname=${1}
	local  __resultvar=${2}

	echo "${hostname}" | grep -P "^[a-z][a-z-0-9]*$" >/dev/null
	local myresult=$?
	eval $__resultvar="'$myresult'"
}


validate_username() {
# User name must start with a lower-case alpha character and be followed by up to 31 alphanumerics plus dash or underscores
# Maximum length of 32
	local username=${1}
	local __resultvar=${2}

	echo "${username}" | grep -P "^[a-z][a-z0-9-_]{0,31}$" >/dev/null
	local myresult=$?
	eval $__resultvar="'$myresult'"
}



arch_chroot() {
	local archroot=$1
	local input=$2

	arch-chroot "${archroot}" /bin/bash -c "${input}"

}

chroot_set_hostname() {
	local archroot=$1
	local hostname=$2

	input="echo \"${hostname}\" > /etc/hostname"
	arch_chroot "${archroot}" "${input}"

}

chroot_add_user() {
	local archroot=$1
	local username=$2

	input="useradd -m -g users -G wheel,storage,power -s /bin/bash ${username}"
	arch_chroot "${archroot}" "${input}"

}

chroot_passwd() {
	local archroot=$1
	local username=$2
	local userpwd=$3

	input="echo -e \"${userpwd}\n${userpwd}\n\" | passwd ${username}"
	arch_chroot "${archroot}" "${input}"

}

get_installed_package_list() {
	local listfilename=$1

	pacman -Qe | awk '{print $1}' > "${listfilename}"

}


archive_arch_rootfs() {
	local archroot=$1
	local archive=$2
	local logfile=$3

	# create a temporary list of socket files to exclude
	find ${archroot} -type s -print > /tmp/sockets-to-exclude

	tar cvpzf \
		"${archive}" \
		-X /tmp/sockets-to-exclude \
		--exclude=${archroot}/proc \
		--exclude=${archroot}/lost+found  \
		--exclude=${archroot}/tmp \
		--exclude=/${archroot}/mnt \
		--exclude=${archroot}/sys ${archroot} \
		> "${logfile}"

}



