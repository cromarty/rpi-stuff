#!/usr/bin/perl -w
#
# This Perl script is used to generate text on stdout with lines in the format of:
#
# export BUILD_PATH="path"
# export CONFIG_PATH="path"
# export UTILS_PATH="path"
#
# Arguments which result in output lines are:
#
#     --build-path
#     --config-path
#     --utils-path
#     --relative
#
# The prefix "export " is only included if the --export argument is included
# The dashes in the middle of arguments are transformed into underscores.
#
# An argument of --help will cause the usage text to be displayed and no output to be printed.
#
# Relative paths are expanded to absolute paths unless the '--relative' 
switch is included.
#


use strict;
use File::Spec;
use Getopt::Long;

my $buildpath = "";
my $configpath = "";
my $utilspath = "";
my $export = "";
my $relative = "";
my %args;
my $key;
my $env;
my $line;

GetOptions(
	'build-path=s' => \&saveargs,
	'config-path=s' => \&saveargs,
	'utils-path=s' => \&saveargs,
	'log-file=s' => \&saveargs,
	'relative' => \&saveargs,
	'help' => \&saveargs,
	'export' => \&saveargs
) || die &usage;

if ( $args{'help'} ) {
	warn &usage;
	exit;
}

my $datestring = localtime();

print <<eof;

#
# Generated by $0 version 1.0
#
# sausage-machine version 0.1 beta
#
# Generated on: $datestring
#
eof

$export = exists $args{export};
delete $args{export};

foreach $key (keys %args) {
	$line = "";
	if ( $export ) {
		$line = "export ";
	}
	$env = "SM_$key";
	$env =~ s/-/_/g;
	$line .= uc($env)."=\"";
if ( $relative ) {
$line .= $args{$key};
} else {
$line .= File::Spec->rel2abs($args{$key})."\"";
}
	print "$line\n";
}



#--- subs


sub saveargs {
	my($arg, $value) = @_;
	$args{$arg} = $value;
}

sub usage {
	my $msg = <<eof;

Usage:
	$0 [ --help ] \
		| [ --export ] \
		[ --build-path=PATH ] \
		[ --config-path=PATH ] \
		[ --utils-path=PATH]

	Write a line for each of the three string arguments (not including --help and --export) to stdout

	If --export is included, the line for each argument is prefixed with 'export '

	If --help is included this usage text is displayed and no output is produced.


eof

	return $msg;
}



