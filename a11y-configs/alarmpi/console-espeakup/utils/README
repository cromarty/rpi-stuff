
VI-Arch-cli-espeakup.img

This is actually version 2.1 of rsvi-arch, which was published some time ago but 
which still had stuttering issues with espeak.

I have struggled to come up with a naming convention which will accomodate the 
images I would like to publish over the coming weeks.  The name needs to reflect 
the distro, the general strategy and the means of achieving the goals.

Hence VI-Arch-cli-espeakup, which means:

- VI (for the Visually Impaired)
- Arch Linux
- cli (console-only, no GUI)
- espeakup (the method of connecting SpeakUp to eSpeak)

There are a few alternative methods to connect SpeakUp to eSpeak, but all 
methods other than espeakup involve speech-dispatcher.

About this image:

Installed on this image are three accessibility tools:

1.  SpeakUp, the console-mode screen-reader.
2.  Emacspeak, which describes itself as 'The Complete Audio Desktop', 
justifiably.
3.  brltty, Braille display driver.

Please Google each of these tools for more information about how they function 
and about how to use them.

File System Expansion:

Contained in the home directory of the 'pi' user there are two scripts to 
achieve the expansion of the root file-system:

1.  expand-arch-rootfs-2.0.sh
2.  resize-arch-rootfs-2.0.sh

To run these tools please do the following:

1.  Make sure the executable flag for each script is set:

chmod +x expand-arch-rootfs-2.0.sh
chmod +x resize-arch-rootfs-2.0.sh

2.  Run the first script:

./expand-arch-rootfs-2.0.sh

It will gabble some stuff while it deletes the second primary partition and 
re-creates it to fill the card.  There will be a warning about the kernel still using the 
old file-system table, ignore this warning.  Don't alarm yourself about the 
mention of deleting the second primary partition, the contents of it are left 
intact.

3.  reboot

4.  When the Pi has rebooted:

./resize-arch-rootfs-2.0.sh

5.  Wait for a few minutes and reboot again.

6.  Your root file-system should now almost fill the card.

Note:  I have left about 30 megabytes between the top end of the file-system and 
the end of the card.  This helps to ensure that when using 'dd' to back-up the 
card, the image file created runs off the end of the file-system.  This ensures 
that when the back-up image is written back to a card, the end of the 
file-system is not chopped off, preventing the card from booting.


